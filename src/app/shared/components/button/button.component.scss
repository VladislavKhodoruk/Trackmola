@import "mixins";
@import "vars/variables";

:host {
  .button {
    @include flex(center, center, var(--offset));
    cursor: pointer;

    height: 3rem;
    padding: 0 var(--offset);

    font: var(--font-buttonMiddle);
    color: var(--white);
    text-transform: capitalize;

    border: none;
    border-radius: var(--border-radius-m);
    outline: none;

    &-primary {
      background-color: var(--primary);

      &:hover {
        background-color: var(--primary-hover);
      }

      &:disabled {
        background-color: var(--primary-disabled);
      }
    }

    &-secondary {
      color: var(--primary);

      background-color: var(--white);
      border: $border-button;

      &:hover {
        color: var(--primary-hover);

        border-color: var(--primary-hover);
      }

      &:disabled {
        color: var(--primary-disabled);

        border-color: var(--primary-disabled);
      }
    }

    &-half-of-primary {
      background-color: var(--primary-50);
    }

    &-default-borders {
      border-radius: 0;
    }

    &-m {
      padding: 0 var(--offset-ml);
    }

    &-b {
      padding: 0 var(--offset-b);
    }

    &-d {
      padding: var(--offset) var(--offset-ml);
    }

    &-s {
      padding: 0 var(--offset-m);
    }

    &-sl {
      height: 2rem;
      padding: 0 var(--offset);

      border-radius: var(--offset-l);
    }

    &-xs {
      height: 2.5rem;
      padding: 0 var(--offset-s);
    }

    &-ds {
      width: 6.25rem;
      height: 2.25rem;
      padding: 0;

      color: var(--gray2);

      background-color: transparent;
      border-color: var(--gray);
    }

    &-rect {
      border-radius: 0;
    }

    &-left-border-straight {
      border-radius: 0 var(--border-radius-m) var(--border-radius-m) 0;
    }

    &-right-border-straight {
      border-radius: var(--border-radius-m) 0 0 var(--border-radius-m);
    }

    &-icon {
      @include flex(flex-start, flex-start);
    }

    &-authorization {
      width: 100%;
      margin: var(--offset) 0;

      text-transform: uppercase;
    }

    &-navigation-icon {
      width: 2.25rem;
      height: 2.25rem;

      border-radius: var(--border-radius);
    }

    &:disabled {
      cursor: not-allowed;
    }
  }

  .button-add-to-report {
    width: 2.5rem;
    height: 2.25rem;
    padding: 0 var(--offset-xs);
  }

  .task-status {
    @include flex(center, center);

    cursor: pointer;
    user-select: none;

    height: 2rem;
    padding: 0 0.5rem;

    font-size: var(--font-main);
    color: var(--primary);

    border: none;
    border-radius: var(--border-radius-l);

    &:hover {
      background-color: var(--gray4);
    }

    &-icon {
      display: none;
    }

    &-checked {
      color: var(--white);

      background-color: var(--primary);

      &:hover {
        background-color: var(--primary-hover);
      }
    }

    &:disabled {
      opacity: 0.75;
    }
  }

  .task-status-checked .task-status-icon {
    display: flex;

    margin-right: 0.25rem;

    color: var(--white);
  }

  .icon {
    display: flex;
  }

  .period-switcher {
    background-color: var(--primary-50);

    &:hover {
      opacity: 0.9;
    }

    &-selected {
      background-color: var(--primary);
    }
  }

  .project-task-question {
    padding: var(--offset) var(--offset-s);
  }

  .project-task-user-mode {
    height: 2.5rem;
    padding: 0 var(--offset-l);
  }
}
